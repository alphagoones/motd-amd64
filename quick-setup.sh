#!/bin/bash

# MOTD-AMD64 Quick Setup Script
# URL: https://github.com/alphagoones/motd-amd64
# Usage: curl -fsSL https://raw.githubusercontent.com/alphagoones/motd-amd64/main/scripts/quick-setup.sh | bash

set -e

# Configuration
GITHUB_REPO="alphagoones/motd-amd64"
GITHUB_API="https://api.github.com/repos/$GITHUB_REPO"
GITHUB_RAW="https://raw.githubusercontent.com/$GITHUB_REPO/main"
TEMP_DIR="/tmp/motd-amd64-setup"

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

# Fonction d'affichage
print_banner() {
    echo -e "${CYAN}"
    cat << 'EOF'
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    ‚ïë                     MOTD-AMD64 Quick Setup                  ‚ïë
    ‚ïë              Installation rapide et automatis√©e             ‚ïë
    ‚ïë                   Optimis√© pour x86_64/AMD64                ‚ïë
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
    echo -e "${NC}"
}

print_step() {
    echo -e "${BLUE}[√âTAPE]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCC√àS]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERREUR]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[ATTENTION]${NC} $1"
}

print_info() {
    echo -e "${PURPLE}[INFO]${NC} $1"
}

# Fonction de nettoyage
cleanup() {
    if [[ -d "$TEMP_DIR" ]]; then
        rm -rf "$TEMP_DIR"
    fi
}

# Pi√®ge pour nettoyage en cas d'erreur
trap cleanup EXIT

# V√©rifications pr√©alables
check_requirements() {
    print_step "V√©rification des pr√©requis..."
    
    # V√©rifier si on est sur une distribution support√©e
    if ! command -v apt &> /dev/null; then
        print_error "Ce script n√©cessite une distribution bas√©e sur Debian/Ubuntu"
        exit 1
    fi
    
    # V√©rifier l'architecture
    ARCH=$(uname -m)
    if [[ "$ARCH" != "x86_64" ]]; then
        print_warning "Ce script est optimis√© pour x86_64, architecture d√©tect√©e: $ARCH"
        read -p "Continuer ? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
    fi
    
    # V√©rifier la connectivit√© internet
    if ! curl -s --head https://github.com &> /dev/null; then
        print_error "Connexion internet requise"
        exit 1
    fi
    
    # V√©rifier les privil√®ges
    if [[ $EUID -eq 0 ]]; then
        print_warning "Script ex√©cut√© en tant que root"
        print_info "Recommandation: ex√©cutez avec sudo si n√©cessaire"
    fi
    
    print_success "Pr√©requis valid√©s"
}

# D√©tection de la m√©thode d'installation pr√©f√©r√©e
detect_install_method() {
    print_step "D√©tection de la m√©thode d'installation..."
    
    INSTALL_METHOD=""
    
    # V√©rifier si git est disponible
    if command -v git &> /dev/null; then
        INSTALL_METHOD="git"
        print_info "Git d√©tect√© - Installation depuis le d√©p√¥t"
    # V√©rifier si curl/wget sont disponibles
    elif command -v curl &> /dev/null || command -v wget &> /dev/null; then
        INSTALL_METHOD="direct"
        print_info "Installation directe via t√©l√©chargement"
    else
        print_error "Ni git ni curl/wget ne sont disponibles"
        print_info "Installation des outils requis..."
        
        if [[ $EUID -ne 0 ]]; then
            sudo apt update
            sudo apt install -y curl git
        else
            apt update
            apt install -y curl git
        fi
        
        INSTALL_METHOD="git"
    fi
}

# Installation via Git
install_via_git() {
    print_step "Installation via Git..."
    
    # Cr√©er le r√©pertoire temporaire
    mkdir -p "$TEMP_DIR"
    cd "$TEMP_DIR"
    
    # Cloner le d√©p√¥t
    print_info "Clonage du d√©p√¥t depuis GitHub..."
    git clone "https://github.com/$GITHUB_REPO.git" .
    
    # V√©rifier que le script d'installation existe
    if [[ ! -f "install.sh" ]]; then
        print_error "Script d'installation non trouv√© dans le d√©p√¥t"
        exit 1
    fi
    
    # Rendre le script ex√©cutable
    chmod +x install.sh
    
    print_success "D√©p√¥t clon√© avec succ√®s"
}

# Installation directe
install_via_direct() {
    print_step "Installation directe..."
    
    # Cr√©er le r√©pertoire temporaire
    mkdir -p "$TEMP_DIR"
    cd "$TEMP_DIR"
    mkdir -p scripts
    
    # T√©l√©charger le script d'installation
    print_info "T√©l√©chargement du script d'installation..."
    
    if command -v curl &> /dev/null; then
        curl -fsSL "$GITHUB_RAW/install.sh" -o install.sh
    elif command -v wget &> /dev/null; then
        wget -qO install.sh "$GITHUB_RAW/install.sh"
    else
        print_error "Impossible de t√©l√©charger le script d'installation"
        exit 1
    fi
    
    # V√©rifier le t√©l√©chargement
    if [[ ! -f "install.sh" ]] || [[ ! -s "install.sh" ]]; then
        print_error "√âchec du t√©l√©chargement du script d'installation"
        exit 1
    fi
    
    # Rendre le script ex√©cutable
    chmod +x install.sh
    
    print_success "Script d'installation t√©l√©charg√©"
}

# V√©rifier la derni√®re version
check_latest_version() {
    print_step "V√©rification de la derni√®re version..."
    
    if command -v curl &> /dev/null; then
        LATEST_VERSION=$(curl -s "$GITHUB_API/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' 2>/dev/null || echo "unknown")
    else
        LATEST_VERSION="unknown"
    fi
    
    if [[ "$LATEST_VERSION" != "unknown" ]]; then
        print_info "Derni√®re version disponible: $LATEST_VERSION"
    else
        print_warning "Impossible de v√©rifier la version"
    fi
}

# Configuration interactive simplifi√©e
quick_configure() {
    print_step "Configuration rapide..."
    
    echo -e "${CYAN}Choix de configuration rapide pour AMD64:${NC}"
    echo "1) Configuration serveur (recommand√©e pour serveurs)"
    echo "2) Configuration station de travail (recommand√©e pour desktop)"
    echo "3) Configuration minimale (serveur l√©ger)"
    echo "4) Configuration compl√®te (toutes les options)"
    echo "5) Configuration personnalis√©e"
    echo
    
    read -p "Votre choix (1-5) [1]: " -r choice
    choice=${choice:-1}
    
    case $choice in
        1)
            print_info "Configuration serveur s√©lectionn√©e"
            QUICK_CONFIG="server"
            ;;
        2)
            print_info "Configuration station de travail s√©lectionn√©e"
            QUICK_CONFIG="workstation"
            ;;
        3)
            print_info "Configuration minimale s√©lectionn√©e"
            QUICK_CONFIG="minimal"
            ;;
        4)
            print_info "Configuration compl√®te s√©lectionn√©e"
            QUICK_CONFIG="full"
            ;;
        5)
            print_info "Configuration personnalis√©e - utilisation du mode interactif"
            QUICK_CONFIG="interactive"
            ;;
        *)
            print_warning "Choix invalide, utilisation de la configuration serveur"
            QUICK_CONFIG="server"
            ;;
    esac
}

# Ex√©cution de l'installation
run_installation() {
    print_step "Lancement de l'installation..."
    
    case $QUICK_CONFIG in
        "server")
            print_info "Installation avec configuration serveur..."
            export MOTD_AUTO_CONFIG="server"
            export MOTD_THEME="blue"
            export MOTD_SHOW_HOSTNAME="true"
            export MOTD_SYSTEM_INFO="system,arch,kernel,uptime,load,memory,disk,ip,temp,users,lastlog,updates"
            export MOTD_SERVICES="ssh,apache2,nginx,docker,postgresql,mysql,redis,fail2ban,ufw"
            ;;
        "workstation")
            print_info "Installation avec configuration station de travail..."
            export MOTD_AUTO_CONFIG="workstation"
            export MOTD_THEME="purple"
            export MOTD_SHOW_HOSTNAME="true"
            export MOTD_SYSTEM_INFO="system,arch,kernel,uptime,load,memory,disk,ip,temp,gpu,users"
            export MOTD_SERVICES="ssh,docker,nginx"
            ;;
        "minimal")
            print_info "Installation avec configuration minimale..."
            export MOTD_AUTO_CONFIG="minimal"
            export MOTD_THEME="green"
            export MOTD_SHOW_HOSTNAME="false"
            export MOTD_SYSTEM_INFO="system,uptime,memory,disk,load"
            export MOTD_SERVICES="ssh"
            ;;
        "full")
            print_info "Installation avec configuration compl√®te..."
            export MOTD_AUTO_CONFIG="full"
            export MOTD_THEME="default"
            export MOTD_SHOW_HOSTNAME="true"
            export MOTD_SYSTEM_INFO="system,arch,kernel,uptime,load,memory,disk,ip,temp,gpu,users,lastlog,updates"
            export MOTD_SERVICES="ssh,apache2,nginx,docker,postgresql,mysql,redis,mongodb,elasticsearch,grafana,prometheus,fail2ban,ufw"
            ;;
        "interactive")
            print_info "Mode interactif - configuration manuelle..."
            unset MOTD_AUTO_CONFIG
            ;;
    esac
    
    # Ex√©cuter l'installation
    if [[ $EUID -ne 0 ]]; then
        sudo ./install.sh
    else
        ./install.sh
    fi
    
    print_success "Installation termin√©e !"
}

# Affichage des informations post-installation
show_post_install_info() {
    print_step "Informations post-installation"
    
    echo
    echo -e "${GREEN}‚úÖ MOTD-AMD64 install√© avec succ√®s !${NC}"
    echo
    echo -e "${CYAN}üìã Commandes utiles :${NC}"
    echo -e "  ${YELLOW}‚Ä¢${NC} Tester le MOTD      : ${WHITE}sudo run-parts /etc/update-motd.d/${NC}"
    echo -e "  ${YELLOW}‚Ä¢${NC} Reconfigurer       : ${WHITE}sudo motd-amd64-install --configure${NC}"
    echo -e "  ${YELLOW}‚Ä¢${NC} D√©sinstaller       : ${WHITE}sudo motd-amd64-install --uninstall${NC}"
    echo
    echo -e "${CYAN}üìÅ Fichiers de configuration :${NC}"
    echo -e "  ${YELLOW}‚Ä¢${NC} Configuration      : ${WHITE}/etc/motd-amd64/config${NC}"
    echo -e "  ${YELLOW}‚Ä¢${NC} Informations       : ${WHITE}/etc/motd-amd64/system_info${NC}"
    echo -e "  ${YELLOW}‚Ä¢${NC} Services           : ${WHITE}/etc/motd-amd64/services${NC}"
    echo
    echo -e "${CYAN}üîß Optimisations AMD64 :${NC}"
    echo -e "  ${YELLOW}‚Ä¢${NC} Capteurs temp√©rature : ${WHITE}lm-sensors configur√©${NC}"
    echo -e "  ${YELLOW}‚Ä¢${NC} Support GPU        : ${WHITE}NVIDIA/AMD/Intel d√©tect√©s${NC}"
    echo -e "  ${YELLOW}‚Ä¢${NC} Services serveur   : ${WHITE}Auto-d√©tect√©s et configur√©s${NC}"
    echo
    echo -e "${CYAN}üîó Liens utiles :${NC}"
    echo -e "  ${YELLOW}‚Ä¢${NC} Documentation      : ${WHITE}https://github.com/$GITHUB_REPO${NC}"
    echo -e "  ${YELLOW}‚Ä¢${NC} Issues/Support     : ${WHITE}https://github.com/$GITHUB_REPO/issues${NC}"
    echo -e "  ${YELLOW}‚Ä¢${NC} Releases           : ${WHITE}https://github.com/$GITHUB_REPO/releases${NC}"
    echo
    
    # Afficher un aper√ßu du MOTD
    if [[ -x "/etc/update-motd.d/00-motd-amd64" ]]; then
        echo -e "${PURPLE}üé® Aper√ßu du MOTD :${NC}"
        echo -e "${CYAN}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
        sudo run-parts /etc/update-motd.d/ 2>/dev/null || true
        echo -e "${CYAN}‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ${NC}"
    fi
    
    echo
    echo -e "${GREEN}üéâ Profitez de votre nouveau MOTD AMD64 !${NC}"
}

# Test de l'installation
test_installation() {
    print_step "Test de l'installation..."
    
    local errors=0
    
    # V√©rifier les fichiers install√©s
    if [[ ! -f "/etc/update-motd.d/00-motd-amd64" ]]; then
        print_error "Script MOTD principal manquant"
        ((errors++))
    fi
    
    if [[ ! -f "/etc/update-motd.d/10-motd-services" ]]; then
        print_error "Script MOTD services manquant"
        ((errors++))
    fi
    
    if [[ ! -d "/etc/motd-amd64" ]]; then
        print_error "R√©pertoire de configuration manquant"
        ((errors++))
    fi
    
    # V√©rifier les permissions
    if [[ ! -x "/etc/update-motd.d/00-motd-amd64" ]]; then
        print_error "Script MOTD principal non ex√©cutable"
        ((errors++))
    fi
    
    # Test d'ex√©cution
    if ! sudo run-parts /etc/update-motd.d/ &>/dev/null; then
        print_error "Erreur lors de l'ex√©cution du MOTD"
        ((errors++))
    fi
    
    # V√©rifier les capteurs de temp√©rature
    if command -v sensors &> /dev/null; then
        print_success "Capteurs de temp√©rature configur√©s"
    else
        print_warning "lm-sensors non install√©"
    fi
    
    if [[ $errors -eq 0 ]]; then
        print_success "Installation valid√©e"
        return 0
    else
        print_error "$errors erreur(s) d√©tect√©e(s)"
        return 1
    fi
}

# Gestion des options de ligne de commande
handle_arguments() {
    while [[ $# -gt 0 ]]; do
        case $1 in
            --server)
                QUICK_CONFIG="server"
                SKIP_INTERACTIVE=true
                shift
                ;;
            --workstation)
                QUICK_CONFIG="workstation"
                SKIP_INTERACTIVE=true
                shift
                ;;
            --minimal)
                QUICK_CONFIG="minimal"
                SKIP_INTERACTIVE=true
                shift
                ;;
            --full)
                QUICK_CONFIG="full"
                SKIP_INTERACTIVE=true
                shift
                ;;
            --theme=*)
                THEME="${1#*=}"
                shift
                ;;
            --no-hostname)
                SHOW_HOSTNAME="false"
                shift
                ;;
            --help|-h)
                show_help
                exit 0
                ;;
            --version)
                show_version
                exit 0
                ;;
            *)
                print_warning "Option inconnue: $1"
                shift
                ;;
        esac
    done
}

# Affichage de l'aide
show_help() {
    echo "MOTD-AMD64 Quick Setup"
    echo
    echo "Usage: $0 [OPTIONS]"
    echo
    echo "Options:"
    echo "  --server            Configuration serveur automatique"
    echo "  --workstation       Configuration station de travail automatique"
    echo "  --minimal           Configuration minimale automatique"
    echo "  --full              Configuration compl√®te automatique"
    echo "  --theme=THEME       Th√®me de couleurs (default|blue|green|red|purple)"
    echo "  --no-hostname       D√©sactiver l'affichage du hostname"
    echo "  --help, -h          Afficher cette aide"
    echo "  --version           Afficher la version"
    echo
    echo "Exemples:"
    echo "  $0                  # Installation interactive"
    echo "  $0 --server         # Installation serveur automatique"
    echo "  $0 --workstation    # Installation station de travail"
    echo "  $0 --minimal        # Installation minimale"
    echo "  $0 --theme=blue     # Installation avec th√®me bleu"
}

# Affichage de la version
show_version() {
    echo "MOTD-AMD64 Quick Setup v1.0.0"
    if [[ "$LATEST_VERSION" != "unknown" ]]; then
        echo "Derni√®re version MOTD-AMD64: $LATEST_VERSION"
    fi
}

# Fonction principale
main() {
    # Variables par d√©faut
    QUICK_CONFIG=""
    SKIP_INTERACTIVE=false
    THEME=""
    SHOW_HOSTNAME=""
    
    # Traitement des arguments
    handle_arguments "$@"
    
    # Affichage de la banni√®re
    print_banner
    
    # V√©rifications pr√©alables
    check_requirements
    check_latest_version
    detect_install_method
    
    # Configuration si pas d'arguments automatiques
    if [[ "$SKIP_INTERACTIVE" != "true" ]]; then
        quick_configure
    fi
    
    # Installation selon la m√©thode d√©tect√©e
    case $INSTALL_METHOD in
        "git")
            install_via_git
            ;;
        "direct")
            install_via_direct
            ;;
        *)
            print_error "M√©thode d'installation non d√©termin√©e"
            exit 1
            ;;
    esac
    
    # Ex√©cution de l'installation
    run_installation
    
    # Test de l'installation
    if test_installation; then
        show_post_install_info
    else
        print_error "L'installation semble avoir √©chou√©"
        print_info "Consultez les logs ci-dessus pour plus de d√©tails"
        exit 1
    fi
}

# Point d'entr√©e
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
